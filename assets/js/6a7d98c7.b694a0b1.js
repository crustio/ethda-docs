"use strict";(self.webpackChunkethda_docs=self.webpackChunkethda_docs||[]).push([[4958],{9079:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>i});var t=o(5893),s=o(1151);const a={id:"upload-and-download-blobs",title:"",hide_table_of_contents:!1},l=void 0,r={id:"developers/upload-and-download-blobs",title:"",description:"Background",source:"@site/docs/developers/upload-and-download-blobs.md",sourceDirName:"developers",slug:"/developers/upload-and-download-blobs",permalink:"/developers/upload-and-download-blobs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"upload-and-download-blobs",title:"",hide_table_of_contents:!1},sidebar:"mySidebar",previous:{title:"",permalink:"/developers/quick-start/using-ethda-faucet"},next:{title:"",permalink:"/resources/ethda-contracts"}},d={},i=[{value:"Background",id:"background",level:2},{value:"Upload Blobs",id:"upload-blobs",level:2},{value:"Download Blobs",id:"download-blobs",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,t.jsxs)(n.p,{children:["Besides the new blob-carrying transactions introduced by ",(0,t.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-4844",children:"EIP-4844"}),", there are a few different types of ",(0,t.jsx)(n.em,{children:"legacy"})," transactions which are widely supported by community tools like MetaMask:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Regular transactions: a transaction from one account to another."}),"\n",(0,t.jsx)(n.li,{children:"Contract deployment transactions: a transaction without a 'to' address, where the data field is used for the contract code."}),"\n",(0,t.jsx)(n.li,{children:"Execution of a contract: a transaction that interacts with a deployed smart contract. In this case, 'to' address is the smart contract address."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The ultimate goal of EthDA is to support the new type of blob-carrying transactions, but at current stage, to keep maximal compatibility with ecosystem tools (like MetaMask, etc), we use regular transactions with an extensional protocol for Blobs uploading."}),"\n",(0,t.jsx)(n.h2,{id:"upload-blobs",children:"Upload Blobs"}),"\n",(0,t.jsxs)(n.p,{children:["FirsBlobs and their additional information should be placed in ",(0,t.jsx)(n.code,{children:"data"})," field, and encoded in hexadecimal with UTF-8 character encoding."]}),"\n",(0,t.jsx)(n.p,{children:"A typical blob uploading transaction have fields like below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"{\n  from,\n  to,\n  gas,\n  value,\n  gasPrice,\n  maxPriorityFeePerGas,\n  maxFeePerGas,\n  data: {\n    blobs,\n    blobContentTypes,\n    blobVersionedHashes,\n    kzgCommitments,\n    kzgProofs\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Please note:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"to"}),": Should be always set to a placeholder address ",(0,t.jsx)(n.code,{children:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"value"}),": Should always be 0"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gas"}),": Including normal transaction fees and blob storage fees"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," -> ",(0,t.jsx)(n.code,{children:"blobs/blobVersionedHashes/kzgCommitments/kzgProofs"}),": Same to ",(0,t.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-4844",children:"EIP-4844"})," blob carrying transactions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," -> ",(0,t.jsx)(n.code,{children:"blobContentTypes"}),": Specify mime type of the Blobs. Useful for users storing application data."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"download-blobs",children:"Download Blobs"}),"\n",(0,t.jsxs)(n.p,{children:["Blobs could be download via regular ",(0,t.jsx)(n.strong,{children:"eth_getTransactionByHash / eth_getTransactionByBlockHashAndIndex / eth_getTransactionByBlockNumberAndIndex"})," RPC interfaces."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>r,a:()=>l});var t=o(7294);const s={},a=t.createContext(s);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);