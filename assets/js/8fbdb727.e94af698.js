"use strict";(self.webpackChunkethda_docs=self.webpackChunkethda_docs||[]).push([[9565],{4290:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>i});var t=n(5893),s=n(1151);const l={id:"using-ethda-as-dstorage",title:"",hide_table_of_contents:!1},a=void 0,r={id:"developers/how-to/using-ethda-as-dstorage",title:"",description:"Developers could use @ethda/blobs NPM package to upload Blobs to EthDA and download from it. Currently only NodeJS environment is supported.",source:"@site/docs/developers/how-to/using-ethda-as-dstorage.md",sourceDirName:"developers/how-to",slug:"/developers/how-to/using-ethda-as-dstorage",permalink:"/developers/how-to/using-ethda-as-dstorage",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"using-ethda-as-dstorage",title:"",hide_table_of_contents:!1}},d={},i=[{value:"Install",id:"install",level:2},{value:"Upload Blobs",id:"upload-blobs",level:2},{value:"Download Blobs",id:"download-blobs",level:2}];function c(e){const o={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["Developers could use ",(0,t.jsx)(o.a,{href:"https://www.npmjs.com/package/@ethda/blobs",children:"@ethda/blobs"})," NPM package to upload Blobs to EthDA and download from it. Currently only NodeJS environment is supported."]}),"\n",(0,t.jsx)(o.h2,{id:"install",children:"Install"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-sh",children:"$ npm install @ethda/blobs\n"})}),"\n",(0,t.jsx)(o.h2,{id:"upload-blobs",children:"Upload Blobs"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-Javascript",children:"import {BlobClient, EncodeBlobs} from '@ethda/blobs';\nimport {ethers} from \"ethers\";\n\nconst content = 'abc....';\nconst blobs = EncodeBlobs(Buffer.from(content, 'utf-8'));\n\nconst signer = new ethers.Wallet('<private_key>', new ethers.providers.JsonRpcProvider(\"https://rpc.ethda.io\"));\nconst blobClient = new BlobClient(signer);\nconst hash = await blobClient.sendTx(blobs)\nconst receipt = await blobClient.getTxReceipt(hash)\n"})}),"\n",(0,t.jsx)(o.h2,{id:"download-blobs",children:"Download Blobs"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-Javascript",children:"import { BlobClient, EncodeBlobs } from '@ethda/blobs';\n\nconst txHash = '...';\nconst blobClient = new BlobClient(new ethers.providers.JsonRpcProvider(\"https://rpc.ethda.io\"));\nconst result = await blobTrans.downloadBlobs(txHash)\n/**\n**  result: {\n blob_hashes: ['0x01853e6b060f5b155f406a7ca3f912df5f93873d9df56ad31904db846565dbd2'],\n sidecar: { blobs: [ [Array] ], commitments: [ [Array] ], proofs: [ [Array] ] }}\n **\n*/\n"})})]})}function h(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,o,n)=>{n.d(o,{Z:()=>r,a:()=>a});var t=n(7294);const s={},l=t.createContext(s);function a(e){const o=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(l.Provider,{value:o},e.children)}}}]);