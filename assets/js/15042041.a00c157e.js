"use strict";(self.webpackChunkethda_docs=self.webpackChunkethda_docs||[]).push([[3379],{2567:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=o(5893),r=o(1151),s=o(4996);const i={id:"da",title:"",hide_table_of_contents:!1},a=void 0,l={id:"overview/da",title:"",description:"Overview",source:"@site/docs/overview/da.md",sourceDirName:"overview",slug:"/overview/da",permalink:"/overview/da",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"da",title:"",hide_table_of_contents:!1},sidebar:"mySidebar",previous:{title:"",permalink:"/overview/technologies"},next:{title:"",permalink:"/developers/quick-start/connecting-to-ethda"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"Workflow",id:"workflow",level:2}];function h(e){const t={em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:["EthDA employs a decentralized DA network for Blob data storage. The DA network comprises of a set of PoS node based on Tendermint consensus, which run DAS to ensure Blob storage, and submit ",(0,n.jsx)(t.em,{children:"DA attestations"})," to Ethereum L1 for L2's rollup contracts to check data availability and verify proofs. Node rewarding and slash are managed by a set of PoS contracts deployed on EthDA's sequencer network."]}),"\n",(0,n.jsx)("div",{style:{textAlign:"center"},children:(0,n.jsx)("img",{src:(0,s.Z)("/img/overview/da/da.png"),style:{maxWidth:"800"}})}),"\n",(0,n.jsx)(t.h2,{id:"workflow",children:"Workflow"}),"\n",(0,n.jsx)(t.p,{children:"A typical workflow of Alt-DA scenario is like below:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["L2 signs & sends tx with encoded Blobs and ",(0,n.jsx)(t.em,{children:"versioned_hashes / kzg_commitments / kzg_proofs"})," to EthDA Sequencer, and pays Blob storage fees"]}),"\n",(0,n.jsx)(t.li,{children:"EthDA Sequencer validates and sends Blobs to EthDA DAS Network"}),"\n",(0,n.jsxs)(t.li,{children:["EthDA DAS Network stores Blobs, performing DAS, and submits ",(0,n.jsx)(t.em,{children:"DA Attestations"})," to DA Contracts on L1"]}),"\n",(0,n.jsx)(t.li,{children:"EthDA tx flows through EthDA CDK components like zkProver/Aggregator, and is rolluped to L1 with ZK Proofs for settlement"}),"\n",(0,n.jsxs)(t.li,{children:["L2 downloads Blobs from EthDA DAS Network on demand, and sends fraud/validity proofs to its rollup contracts for verification. L2 rollup contracts verify proofs and check ",(0,n.jsx)(t.em,{children:"DA attestations"})," from EthDA DA Contracts on L1."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>i});var n=o(7294);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);